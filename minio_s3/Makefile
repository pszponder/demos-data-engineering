.PHONY: help up down downall destroy logs status

# Default target - show help when just typing 'make'
default: help

# Show help information
help: ## Show this help message
	@echo "MinIO S3 Management"
	@echo "Available commands:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "  %-12s %s\n", $$1, $$2}'

# Start MinIO containers
up: ## Start MinIO containers
	@echo "ðŸš€ Starting MinIO containers..."
	docker compose up -d
	@echo "âœ… MinIO containers started!"
	@echo ""
	@echo "ðŸ“‹ MinIO Information:"
	@if [ -f .env ]; then \
		MINIO_PORT=$$(grep '^MINIO_PORT=' .env | cut -d'=' -f2); \
		MINIO_CONSOLE_PORT=$$(grep '^MINIO_CONSOLE_PORT=' .env | cut -d'=' -f2); \
		MINIO_USER=$$(grep '^MINIO_ROOT_USER=' .env | cut -d'=' -f2); \
		echo "   MinIO API: http://localhost:$$MINIO_PORT"; \
		echo "   MinIO Console: http://localhost:$$MINIO_CONSOLE_PORT"; \
		echo "   Username: $$MINIO_USER"; \
		echo "   Default Bucket: demo-bucket"; \
	else \
		echo "   MinIO API: http://localhost:9000"; \
		echo "   MinIO Console: http://localhost:9001"; \
		echo "   Username: minioadmin"; \
		echo "   Default Bucket: demo-bucket"; \
	fi
	@echo ""
	@echo "ðŸ’¡ Use 'make logs' to watch MinIO logs"
	@echo "ðŸ’¡ Use 'make status' to check container status"

# Stop MinIO containers
down: ## Stop MinIO containers
	@echo "ðŸ›‘ Stopping MinIO containers..."
	docker compose down
	@echo "âœ… MinIO containers stopped!"

# Stop and remove MinIO containers, networks, and volumes
downall: ## Stop and remove containers, networks, and volumes
	@echo "ðŸ§¹ Stopping and removing containers, networks, and volumes..."
	docker compose down --volumes --remove-orphans
	@echo "âœ… Complete cleanup finished!"

# Clean up all Docker artifacts generated by this project
destroy: ## Clean up all Docker artifacts generated by this project
	@echo "ðŸ§¹ Destroying all Docker artifacts for this project..."
	docker compose down --volumes --remove-orphans --rmi all
	@echo "âœ… Docker cleanup complete!"

# Watch logs from MinIO containers
logs: ## Watch logs from MinIO containers
	@echo "ðŸ“‹ Watching MinIO logs (press Ctrl+C to exit)..."
	@echo ""
	docker compose logs -f

# Show status of MinIO containers
status: ## Show status of MinIO containers
	@echo "ðŸ“Š MinIO Container Status:"
	@echo ""
	@docker compose ps
	@echo ""
	@echo "ðŸ“¦ MinIO Volumes:"
	@docker volume ls | grep minio || echo "No MinIO volumes found"

