.PHONY: help up down downall destroy logs status clean

# Default target - show help
help:
	@echo "Available commands:"
	@echo "  help     Show this help message (default)"
	@echo "  up       Start MinIO containers"
	@echo "  down     Stop MinIO containers"
	@echo "  downall  Stop and remove MinIO containers, networks, and volumes"
	@echo "  destroy  Clean up all Docker artifacts generated by this project"
	@echo "  logs     Watch logs from MinIO containers"
	@echo "  status   Show status of MinIO containers"
	@echo "  clean    Clean up MinIO data volumes (requires containers to be stopped)"

# Start MinIO containers
up:
	@echo "🚀 Starting MinIO containers..."
	docker compose up -d
	@echo "✅ MinIO containers started!"
	@echo ""
	@echo "📋 MinIO Information:"
	@if [ -f .env ]; then \
		MINIO_PORT=$$(grep '^MINIO_PORT=' .env | cut -d'=' -f2); \
		MINIO_CONSOLE_PORT=$$(grep '^MINIO_CONSOLE_PORT=' .env | cut -d'=' -f2); \
		MINIO_USER=$$(grep '^MINIO_ROOT_USER=' .env | cut -d'=' -f2); \
		echo "   MinIO API: http://localhost:$$MINIO_PORT"; \
		echo "   MinIO Console: http://localhost:$$MINIO_CONSOLE_PORT"; \
		echo "   Username: $$MINIO_USER"; \
		echo "   Default Bucket: demo-bucket"; \
	else \
		echo "   MinIO API: http://localhost:9000"; \
		echo "   MinIO Console: http://localhost:9001"; \
		echo "   Username: minioadmin"; \
		echo "   Default Bucket: demo-bucket"; \
	fi
	@echo ""
	@echo "💡 Use 'make logs' to watch MinIO logs"
	@echo "💡 Use 'make status' to check container status"

# Stop MinIO containers
down:
	@echo "🛑 Stopping MinIO containers..."
	docker compose down
	@echo "✅ MinIO containers stopped!"

# Stop and remove MinIO containers, networks, and volumes
downall:
	@echo "🧹 Stopping and removing containers, networks, and volumes..."
	docker compose down --volumes --remove-orphans
	@echo "✅ Complete cleanup finished!"

# Clean up all Docker artifacts generated by this project
destroy:
	@echo "🧹 Destroying all Docker artifacts for this project..."
	docker compose down --volumes --remove-orphans --rmi all
	@echo "✅ Docker cleanup complete!"

# Watch logs from MinIO containers
logs:
	@echo "📋 Watching MinIO logs (press Ctrl+C to exit)..."
	@echo ""
	docker compose logs -f

# Show status of MinIO containers
status:
	@echo "📊 MinIO Container Status:"
	@echo ""
	@docker compose ps
	@echo ""
	@echo "📦 MinIO Volumes:"
	@docker volume ls | grep minio || echo "No MinIO volumes found"

# Clean up MinIO data volumes (containers must be stopped first)
clean:
	@echo "🧹 Cleaning up MinIO data volumes..."
	@if docker compose ps | grep -q "Up"; then \
		echo "❌ Error: MinIO containers are still running. Stop them first with 'make down'"; \
		exit 1; \
	fi
	@docker volume rm $$(docker volume ls -q | grep minio) 2>/dev/null || echo "No MinIO volumes to remove"
	@echo "✅ MinIO data cleanup complete!"
