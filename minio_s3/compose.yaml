services:
  minio:
    image: minio/minio:latest
    container_name: minio-s3
    restart: unless-stopped
    ports:
      - "${MINIO_PORT:-9000}:9000"       # MinIO API port
      - "${MINIO_CONSOLE_PORT:-9001}:9001" # MinIO Console (Web UI) port
    environment:
      # MinIO credentials (use secure values in production)
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
      # Optional: Set default region
      MINIO_REGION: ${MINIO_REGION:-us-east-1}
    volumes:
      # Persist MinIO data
      - minio_data:/data
    command: server /data --console-address ":${MINIO_CONSOLE_PORT:-9001}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MINIO_PORT:-9000}/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Optional: MinIO Client (mc) for administration
  minio-mc:
    image: minio/mc:latest
    container_name: minio-mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set myminio http://minio:${MINIO_PORT:-9000} ${MINIO_ROOT_USER:-minioadmin} ${MINIO_ROOT_PASSWORD:-minioadmin};
      /usr/bin/mc mb myminio/demo-bucket --ignore-existing;
      /usr/bin/mc policy set public myminio/demo-bucket;
      echo 'MinIO setup complete. Demo bucket created.';
      tail -f /dev/null
      "

volumes:
  minio_data:
    driver: local

networks:
  default:
    name: shared-network
    external: true
